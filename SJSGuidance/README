SJSGuidance
------------------------------------------------------
Stephanie J Spielman, Eric T Dawson, and Claus O Wilke
The University of Texas at Austin
2013-2014

INTRODUCTION
-----------------------------------------------------
1.1 Description
	This program runs a masking algorithm similar to GUIDANCE <CITATION>,
	which aims to improve false positive rates in protein alignments. It is
	provided as supplementary material.

1.2 Dependencies
	SJSGuidance requires,
		1. A C compiler which supports the C++ 2011 Standards (Tested with Intel 13 and GCC 4.8)
		2. MUSCLE, MAFFT, or ClustalW for alignment (mafft is preferable; use of the others will
		require modifying the code and is not recommended).
		3. FastTree is required for building perturbed guide trees
		4. RAxML is required for performing phylogenetic weighting
		5. BranchManager is required for performing phylogenetic weighting
		6. Dendropy must be installed and on the PYTHONPATH.

	Installing MAFFT:
	MAFFT is published and supported by Kazutaka Katoh at AIST. It can be freely installed
	from this page:
	http://mafft.cbrc.jp/alignment/software/
	It requires a modern C compiler. To ensure it is on the system path, try typing "which mafft"
	on the command line. If this fails, please append the mafft binaries to the system path.

	Installing FastTree:
	FastTree is a rapid treebuilder used to make guide trees. It is freely available from the following site:
	http://www.microbesonline.org/fasttree/
	Installation instructions are available from the website. FastTree is so quick we decided not to implement
	OpenMP support in our code, so there's no need to worry about anything but the basic install.
	
	Installing RAxML:
	....
	
	Installing BranchManager:
	[Note that the .jar compiled for Unix is released with our code in src/ already]
	http://mendel.stanford.edu/SidowLab/downloads/BM/BM_ReadMe.txt

	Installing Dendropy:
	Dendropy is a python library for Python 2.x which performs a variety of phylogenetic computing
	functions. It is freely available from:
	http://pythonhosted.org/DendroPy/
	It requires nothing but a working python install.

1.3 Compiling scoring programs
	The C++ programs used to score alignments are guidance_score, bmweights_score, pdweights_score. Compile each with the following lines from inside the directory src/score
	g++ -std=c++0x -O3 guidance_score.cpp -o guidance_score
	g++ -std=c++0x -O3 bmweights_score.cpp -o bmweights_score
	g++ -std=c++0x -O3 pdweights_score.cpp -o pdweights_score
	
	Pre-compiled binaries are provided for Mac OSX. Source code and binaries are found in src/score. Be sure to keep the executables in this directory.

CODE ORGANIZATION
-----------------------------------------------------
2.1 sjs_guidance.py

2.2 main_sjs.py

2.3 map.py

2.4 aligner.py

2.5 bootstrapper.py

2.6 scorer.py

2.7 treebuilder.py

2.8 weight_treebuilder.py

2.9 masker.py

2.10 guidance_score

2.11 bmweights_score

2.12 pdweights_score



RUNNING SJSGUIDANCE
-----------------------------------------------------
3.1 Command Line Flags

	-infile <INFILE.fasta> or -infile <INFILE.fa>
	A file in FASTA format which contains amino acid sequences to be aligned.
	The user will be prompted if no file is provided.

	-n <NUM_THREADS>
	Takes an integer argument for the number of hardware threads to use. This number should
	be less than the total number of cores in the machines.

	-bootstraps <NUM_BOOTSTRAPS>
	Takes an integer argument for the number of bootstraps. If no argument is given,
	ten will be performed.

	-alphabet prot or -alphabet dna
	The alphabet to use for analysis. Protein is the default and is supplied if no
	argument is given.

3.2 Usage
python run_sjs_guidance.py
	Running this will prompt the user for the infile and use the default options for
	threads and bootstraps.

python run_sjs_guidance.py -infile <MYFILE>.fasta -n 2 -bootstraps 50
	Running this will perform analysis using 2 threads and 50 bootstraps (although the default of 100 bootstraps is recommended).

NB: Arguments are not positional, so any ordering should be fine (e.g. switching -n and
-bootstraps in the previous line). It is recommended the user fill in as many flags as possible
to run exactly the analysis they desire.


CONTACTING THE AUTHORS
-----------------------------------------------------
Stephanie Spielman
stephanie.spielman<AT>gmail.com
University of Texas at Austin

Eric T Dawson
eric.t.dawson<AT>gmail.com
University of Texas at Austin
Texas Advanced Computing Center

Claus O Wilke
University of Texas at Austin